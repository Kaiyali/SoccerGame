/* autogenerated by Processing revision 1289 on 2023-01-02 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class Game extends PApplet {

float speedX, speedY;
float  posX, posY;
float  cposX, cposY;
float mousePos;
float angle, resistance;
int circleRadius;
float tmx, tmy;
float xdir, ydir;
boolean ballclicked = false;
int rightScore, leftScore;
GameSetting Game = new GameSetting();
Menu menu = new Menu();
Winner_Window winW = new Winner_Window();
Teams_Window teamW = new Teams_Window();
GameStates  GameStates = new GameStates(); 
Field field = new Field();
Player FrenchBall;
Player ArgentinaBall;
Player soccerBall;
int gameState;
int turn = 0;



public void setup() {
  /* size commented out by preprocessor */;
  posX = width/2;
  posY = height/2;
  cposX = width/3;
  cposY = width/3;
  rightScore = 0;
  leftScore = 0;
  circleRadius = 100;
  gameState = 0; 
  ArgentinaBall  = new Player(width/2+width/6, height/2, circleRadius,"team"+teamW.p1Team+".png" );
  soccerBall     = new Player(width/2, height/2, circleRadius, "soccerBall.png");
  FrenchBall     = new Player(width/3, height/2, circleRadius,"team"+teamW.p2Team+".png" );
}
  

public void draw() {
  background(0);

  if (gameState == GameStates.MENUSTATE) {
    menu.menuState();
  } else if (gameState == GameStates.TEAMSTATE) {
    teamW.showcaseTeams();
    menu.Quitbtn.isPressed = false;
    menu.Playbtn.isPressed = false;
  } else if(gameState == GameStates.FIELDSTATE){
    menu.Quitbtn.isPressed = false;
    menu.Playbtn.isPressed = false;
    teamW.Incbtnp1.isPressed = false;
    teamW.Decbtnp1.isPressed = false;
    teamW.PlayBtn.isPressed = false;
    field.showcaseField();
  } else if(gameState == GameStates.WINNERSTATE){
    winW.showcaseWinner();
  }

}

public void mouseReleased() {
  //depending the area of the mouse the speed changes
  if (ballclicked && turn % 2 == 0) {
    println("Ball clicked");
    float dx = tmx - mouseX;
    float dy = tmy - mouseY;

    float angle = atan2(dy/2, dx/2);
    FrenchBall.angle = angle;
    FrenchBall.speed = 10;
  } else if (ballclicked && turn % 2 !=0) {
    float dx = tmx - mouseX;
    float dy = tmy - mouseY;

    float angle = atan2(dy/2, dx/2);
    ArgentinaBall.angle = angle;
    ArgentinaBall.speed = 10;
  }
}

public void mousePressed() {
  tmx = mouseX;
  tmy = mouseY;

  //if the ball has not been click do not allow the call to move
  if (turn % 2 !=0) {
    if (dist(mouseX, mouseY, FrenchBall.x, FrenchBall.y) < circleRadius/2) {
      ballclicked = true;
      turn++;
    } else {
      ballclicked = false;
    }
  } else {
    if (dist(mouseX, mouseY, ArgentinaBall.x, ArgentinaBall.y) < circleRadius/2) {
      ballclicked = true;
      turn++;
    } else {
      ballclicked = false;
    }
  }

  if (menu.Playbtn.isPressed == true ) {
    print("Play Game");
    gameState = GameStates.TEAMSTATE;
  } else if (menu.Quitbtn.isPressed == true) {
    print("Quit Application");
    exit();
  } else if (teamW.Decbtnp1.isPressed == true){
    teamW.p1Team = (teamW.p1Team - 1 + teamW.teams.length) % teamW.teams.length;
  } else if (teamW.Incbtnp1.isPressed == true){
    teamW.p1Team = (teamW.p1Team + 1) % teamW.teams.length; 
  } else if(teamW.PlayBtn.isPressed ==true){
    gameState = GameStates.FIELDSTATE;
  } else if (teamW.Decbtnp2.isPressed == true){
    teamW.p2Team = (teamW.p2Team - 1 + teamW.teams.length) % teamW.teams.length;
  } else if (teamW.Incbtnp2.isPressed == true){
    teamW.p2Team = (teamW.p2Team + 1) % teamW.teams.length; 
  }
}
class Button {

  float _width;
  float _height;
  String text;
  float posX;
  float posY;
  boolean isPressed;

  Button(float _width, float _height) {
    this._width = _width;
    this._height = _height;
  }

  Button() {
    //set as default values
    this._width = 100;
    this._height = 100;
    this.posX = width/2;
    this.posY = height/2;
    this.text = "button";
  }


  public void create(float posX, float posY, float _width, float _height) {
    this._width = _width;
    this._height = _height;
    this.posX = posX;
    this.posY = posY;
    rectMode(CENTER);
  }
  

  public void display() {
    fill(255, 100, 100);
    rect(posX, posY, _width, _height, 20);
    fill(0);
    text(text, posX + (posX/_width)/2,
      posY + (posY/_height)/2,
      _width, _height);
  }


  public void setText(String text, int fontSize) {
    this.text = text;
    textSize(fontSize);
    fill(0, 408, 612);
    text(text, width/3, height/2, _width, _height);
    textAlign(CENTER);
  }


  public void setText(String text) {
    this.text = text;
    textSize(_height/2.5f);
    fill(0);
    textAlign(CENTER);
  }


  public void checkPress() {
    if (mouseX < posX + _width/2  && mouseX > posX - _width/2) {
      if ( mouseY < posY + _height/2 && mouseY > posY - _height/2) {
        isPressed = true;
      } else {
        isPressed = false;
      }
    } else {
      isPressed = false;
    }
  }

}
class Field {
  int rScore, lScore;
  GameStates  GameStates = new GameStates(); 

 
  public void showcaseField() {
    //setup Games Settings
    Game.bounder(soccerBall);//sets up the bounders of the window to collised with the circle
    Game.bounder(FrenchBall);
    Game.bounder(ArgentinaBall);
    mousePos = dist(mouseX, mouseY, posX, posY);

    //collision and move of balls
    collisionBetter(FrenchBall, soccerBall);
    collisionBetter(FrenchBall, ArgentinaBall);
    FrenchBall.move(.99f);
    soccerBall.move(.99f);

    collisionBetter(ArgentinaBall, soccerBall);
    ArgentinaBall.move(.99f);

    //dispaly game objects
    FrenchBall.display();
    soccerBall.display();
    ArgentinaBall.display();

    if(gameState == GameStates.FIELDSTATE){
      ArgentinaBall.displayImage("team"+teamW.p1Team+".png");
      FrenchBall.displayImage("team"+teamW.p2Team+".png");
    }



    //Right Goal settings
    Goal leftGoal = new Goal(0, height/2, 250, 500);
    leftGoal.isGoal(soccerBall);

    //Left Goal settings
    Goal rightGoal = new Goal(width, height/2, 250, 500);
    rightGoal.isGoal(soccerBall);
    textSize(128);
    text(leftScore, width/2, 120);
    fill(0, 408, 612);

    textSize(128);
    text(rightScore, height/2, 120);
    fill(0, 408, 612);



    if (rightGoal.scored) {
      lScore = ++leftScore;
      soccerBall.x = width/2;
      soccerBall.y = height/2;

      FrenchBall.x = width/3;
      FrenchBall.y = height/2;

      ArgentinaBall.x = width/2+width/6;
      ArgentinaBall.y = height/2;
      print("Goal on the right side");
      text(lScore, width, height/2);
    } else if (leftGoal.scored) {
      rScore = ++rightScore;
      soccerBall.x = width/2;
      soccerBall.y = height/2;

      FrenchBall.x = width/3;
      FrenchBall.y = height/2;

      ArgentinaBall.x = width/2+width/6;
      ArgentinaBall.y = height/2;
      print("Goal on the left side");
      text(rScore, height/2, 120);
    }
    
    if(lScore == 1){
      gameState = GameStates.WINNERSTATE;
    }
    if(rScore == 1){
      gameState = GameStates.WINNERSTATE;
    }
  }
}
class GameSetting {

  public void bounder(Player p1) {

    if (p1.x > width-p1.w/2) {
      fill(random(255), random(255), random(255));

      float dx = p1.x - width;
      float dy = p1.y - height;

      float angle = atan2(dy/2, dx/2);
      p1.angle = abs(angle) + PI/2;
      print(angle);

      p1.speed = 5;
    }
    if (p1.x < p1.w/2) {
      fill(random(255), random(255), random(255));
      float dx = p1.x - width;
      float dy = p1.y - height;
      float angle = atan2(dy/2, dx/2);
      p1.angle = abs(angle) + PI;
      print(angle);
      p1.speed = 5;
    }
    if (p1.y > height-p1.w/2) {
      float dx = p1.x - width;
      float dy = p1.y - height;

      float angle = atan2(dy/2, dx/2);
      p1.angle = abs(angle) + PI/2;
      print(angle);
      p1.speed = 5;
    }
    if (p1.y < p1.w/2) {
      float dx = p1.x - width;
      float dy = p1.y - height;

      float angle = atan2(dy/2, dx/2);
      p1.angle = (angle) + PI;
      print(angle);
      p1.speed = 5;
    }
  }
}
class GameStates{
    public  int MENUSTATE     = 0;
    public  int TEAMSTATE     = 1;
    public  int FIELDSTATE    = 2;
    public  int WINNERSTATE   = 3;
}
class Goal {
  float _x, _y;
  float _width, _height;
  boolean scored;

  Goal(float _x, float _y, float _width, float _height ) {
    this._y = _y;
    this._x = _x;
    this._width = _width;
    this._height = _height;
    rect(_x, _y, _width, _height);
    rectMode(CENTER);
  }


  public void isGoal(Player play) {
    if (play.x < _x + _width/2  && play.x > _x - _width/2) {
      if ( play.y < _y + _height/2 && play.y > _y - _height/2) {
        scored = true;
      } else {
        scored = false;
      }
    } else {
      scored = false;
    }
  }
}
class Menu {
  public Button Playbtn;
  public Button Quitbtn;

  public void menuState() {
    Playbtn = new Button();
    Playbtn.create(width/2, height/3, 300, 100);
    Playbtn.setText("Play");

    Quitbtn = new Button();
    Quitbtn.create(width/2, height/2, 300, 100);
    Quitbtn.setText("Quit");

    Playbtn.display();
    Quitbtn.display();
    Playbtn.checkPress();
    Quitbtn.checkPress();

  }
}
//circle collision
class Player {
  float x, y, w;
  float mx, my;
  float speed;
  float angle, degree;
  boolean inContact;
  PImage img;
  String photo;


  Player(float x, float y, float w) {
    mx = 0;
    my = 0;
    this.x = x;
    this.y = y;
    this.w = w;
  }

    Player(float x, float y, float w, String photo) {
    mx = 0;
    my = 0;
    this.x = x;
    this.y = y;
    this.w = w;
    this.photo = photo;
    img = loadImage(photo);
  }


  public void displayImage(String photo){
    this.photo = photo;
    img = loadImage(photo);
  }

  public void move(float value) {
    if (speed > .1f) {
      speed *= value;
    } else {
      speed = 0;
    }

    speed *= .99f;
    speed *= .99f;

    mx = cos(angle) * speed;
    my = sin(angle) * speed;

    x += mx;
    y += my;
  }

  public void display() {
    circle(x, y, w);
    imageMode(CENTER);
    image(img, x, y, w, w);
  }
}
class Teams_Window {
  public Button Decbtnp1;
  public Button Incbtnp1;
  public Button Decbtnp2;
  public Button Incbtnp2;
  public Button PlayBtn;
  PImage[] teams = new PImage[10];

  int p1Team =2;
  int p2Team =1;



  public void showcaseTeams() {
    //setting up images inside the array
    for (int i = 0; i < teams.length; i++) {
      teams[i] = loadImage("team"+i+".png");
    }

    Decbtnp1 = new Button();
    Decbtnp1.create(width/10, height/2, 50, 50);

    Incbtnp1 = new Button();
    Incbtnp1.create(width/3, height/2, 50, 50);



    Decbtnp2 = new Button();
    Decbtnp2.create(width/1.2f, height/2, 50, 50);

    Incbtnp2 = new Button();
    Incbtnp2.create(width/1.7f, height/2, 50, 50);


    
    PlayBtn = new Button();
    PlayBtn.create(width/1.1f, height/1.3f, 150.00f, 100.00f);
    PlayBtn.setText("Play");



    Decbtnp1.display();
    Incbtnp1.display();
    Decbtnp2.display();
    Incbtnp2.display();
    PlayBtn.display();
    Decbtnp1.checkPress();
    Incbtnp1.checkPress();
    Decbtnp2.checkPress();
    Incbtnp2.checkPress();
    PlayBtn.checkPress();

    
    
    image(teams[p1Team],width/4.6f, height/3, 250, 200);
    stroke(204, 102, 0);
    imageMode(CENTER);

    
    image(teams[p2Team],850, height/3, 250, 200);
    imageMode(CENTER);
  }
}

class Winner_Window{
    public void showcaseWinner(){
        if(field.lScore == 1){
            textSize(30);
            text("The players on the left WON!", height/2, width/2);
        }else{
            textSize(30);
            text("The players on the right WON!", height/2, width/2);
        }
    }
    
}
public void collisionBetter(Player p1, Player p2) {

  if (collision(p1, p2) == true) {

    float distance = dist(p1.x, p1.y, p2.x, p2.y);  //the distance between two circles
    //finding if the distance between the two circles are collising with radius of both circles
    if (distance < p1.w/2 + p2.w/2) {
      float dx = p1.x - p2.x;
      float dy = p1.y - p2.y;

      float angle = atan2(dy/2, dx/2);
      p1.angle = angle;
      p2.angle = angle - PI;

      p1.speed = 5;
      p2.speed = 5;
    }
  }
}

public boolean collision(Player p1, Player p2) {

  if (dist(p1.x, p1.y, p2.x, p2.y) < p1.w/2 + p2.w) {
    return true;
  } else {
    return false;
  }
}


  public void settings() { size(1200, 800); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "Game" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
